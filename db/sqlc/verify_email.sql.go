// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: verify_email.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const createVerifyEmail = `-- name: CreateVerifyEmail :one

INSERT INTO verify_emails(
    id,
    username,
    email,
    secret_code
) VALUES (
  $1, $2, $3, $4
)
RETURNING id, username, email, secret_code, is_used, created_at, expires_at
`

type CreateVerifyEmailParams struct {
	ID         uuid.UUID `json:"id"`
	Username   string    `json:"username"`
	Email      string    `json:"email"`
	SecretCode string    `json:"secret_code"`
}

func (q *Queries) CreateVerifyEmail(ctx context.Context, arg CreateVerifyEmailParams) (VerifyEmail, error) {
	row := q.db.QueryRowContext(ctx, createVerifyEmail,
		arg.ID,
		arg.Username,
		arg.Email,
		arg.SecretCode,
	)
	var i VerifyEmail
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Email,
		&i.SecretCode,
		&i.IsUsed,
		&i.CreatedAt,
		&i.ExpiresAt,
	)
	return i, err
}
