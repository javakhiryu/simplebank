syntax = "proto3";

package pb;

import "rpc_create_user.proto";
import "rpc_update_user.proto";
import "rpc_login_user.proto";
import "rpc_update_user_password.proto";
import "rpc_verify_email.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "simplebank/pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Simple Bank API"
    version: "1.3"
    contact: {
      name: "Javakhir Yu"
      url: "https://github.com/javakhiryu/simplebank"
      email: "javakhiryulchibaev@gmail.com"
    }
    }
};


service SimpleBank {
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
        option (google.api.http) = {
                    post: "/v1/create_user"
                    body: "*"
                };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
          description: "API to create a new user"
          summary: "Create User"
          tags: "user"
        };
    }

    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
      option (google.api.http) = {
                  patch: "/v1/update_user"
                  body: "*"
              };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "API to update a new user"
        summary: "Update User"
        tags: "user"
      };
  }
  rpc UpdateUserPassword(UpdateUserPasswordRequest) returns (UpdateUserPasswordResponse) {
    option (google.api.http) = {
                patch: "/v1/update_user_password"
                body: "*"
            };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "API to update a user password"
      summary: "Update User Password"
      tags: "user"
    };
}
   
    rpc LoginUser(LoginUserRequest) returns (LoginUserResponse) {
        option (google.api.http) = {
                    post: "/v1/login_user"
                    body: "*"
                };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
          description: "API to login user and get acccess token and refresh token"
          summary: "Login User"
          tags: "user"
        };
    };
    rpc VerifyEmail(VerifyEmailRequest) returns (VerifyEmailResponse) {
      option (google.api.http) = {
                  get: "/v1/verify_email"
              };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "API to verify email address of newly created user"
        summary: "Verify Email"
        tags: "user"
      };
  };
 
}